; args: [unit]
; unit : group leader at start

_unit = _this select 0
[_unit] exec "Common\InitTownGroups.sqs"
? !(local LocalServerObject) : exit
_unit disableAI "TARGET"; _unit disableAI "AUTOTARGET"; _unit disableAI "MOVE"
~5

_group = group _unit

_distSpawn = viewDistance + 1500
_cLast = 0

_si = -1
? side _unit == sides select si0 : _si = si0
? side _unit == sides select si1 : _si = si1

timeReinforceTown = 45

#Init
_res = [getPos _unit, [siRes], []] call funcGetClosestTown
_flag = (_res select 0) select tdFlag
_posFlag = getPos _flag
_ti = _res select 2
? _si == -1 : format["ERROR: _si == -1 set in UpdateTownGroup.sqs for %1", (towns select _ti) select tdName] call fDebugLog; exit
_siLast = (_res select 0) select tdSide

;deleteVehicle _unit
_unit setpos [1,1,1]; _unit setdamage 1

? isNull _group : format["ERROR: _group is NULL at init for %1 town group in '%1'", sideNames select _si, (towns select _ti) select tdName] call fDebugLog; exit

; (townGroups select _si) set [count (townGroups select _si), _group]

; player globalchat format["townGroups: %1 - %2", count (townGroups select si0), count (townGroups select si1)]

_timeReinforce = time + timeReinforceTown
_bCheckSupport = true
_support = objNull
_unitsSupport = []; _unitsSupporting = []
_unitsInfantry = []; _unitsVehicle = []

@(((upgMatrix select _si) select upgTownGroup ) == 2)


#Update
  ~(25 + random 10)
	; check if town taken (won)
	_siTown = (towns Select _ti) select tdSide
	? _siTown == _si && _siLast != _si : _timeReinforce = time + timeReinforceTown
	_siLast = _siTown
	? _siTown == _si && time > _timeReinforce : goto "Reinforce"
	? (count (units _group)) == 0 : goto "Update"
	#ReinforceReady
	{ if (alive _x) then { _x doWatch ([getPos _x, 200, 200] call funcGetRandomPos); if (unitReady _x) then { doStop _x } } } forEach units _group	
	? _siTown != _si : goto "TakeFlag"
	? _bCheckSupport : goto "Support"
	goto "Patrol"

#Patrol
  _group setCombatMode "RED"; _group setBehaviour "COMBAT"; _group setSpeedMode "NORMAL"
  ; CHECK HIBERNATE
  _hibernate = !([_si, _flag, _distSpawn] call funcCheckTGSpawn)
  ? _hibernate : goto "Hibernate"
  
	_c = count (units _group)
	? _c < _cLast : [_ti, _si] exec "Server\Info\TownGroupLoss.sqs"
	_cLast = _c
	
	{ if ( ( (random 1) < 0.5 || (_x distance _flag) < 50 ) && (alive _x) && !(_x in (_unitsSupport + _unitsSupporting) ) ) then { _x doMove ([_posFlag, 149, 149] call funcGetRandomPos) } } forEach units _group
	goto "Update"

#TakeFlag
	{ if ((random 1) < 0.5 && !(_x in (_unitsSupport + _unitsSupporting)) ) then { _x doMove ([_posFlag, 5, 5] call funcGetRandomPos) } } forEach units _group
	goto "Update"

#Reinforce
	_timeReinforce = time + timeReinforceTown
	_c = count (units _group); _i = _c; _units = units _group
	#ClearDeadinRein
	_i = _i - 1
	? _i >= 0 && _i < count _units : _u = _units select _i; if (!alive _u && _u == vehicle _u) then {deleteVehicle _u}
	? _i > 0 : goto "ClearDeadinRein"
	_unitsInfantry = []; { if ((vehicle _x) == _x) then { _unitsInfantry = _unitsInfantry + [_x] } } forEach (units _group); _i = 0
	? count (units _group) < 8 : goto "AddInf"
	? count (units _group) < 10 : goto "AddTank"
	? count (units _group) == 10 : goto "AddTankH"
  goto "ReinforceReady"

#AddInf
  _type = -1
  while "_type == -1" do { _type = (infTown select _si) call funcGetRandomUnitType }
  _pos = [_posFlag, 149, 149] call funcGetRandomPos
  ? isNull _group : format["ERROR: _group is NULL at AddInf for %1 town group in '%1'", sideNames select _si, (towns select _ti) select tdName] call fDebugLog; exit
  [_type, 0, 0, 0, _pos, random 360, _si, giTown, _group, 0, 0] exec "Common\AddUnit.sqs"
  ;player globalchat format["AddInf: %1 (%2)", (towns select _ti) select tdName, count (units _group)]
  goto "ReinforceReady"

#AddTank
  ? ((upgMatrix select _si) select upgTownGroupH) == 2: goto "AddTankH"
  ? ((upgMatrix select _si) select upgTownGroupb) != 2: goto "ReinforceReady"
~15
		_type = -1
		while "_type == -1" do { _type = (armorTown select _si) call funcGetRandomUnitType }
		_pos = [_posFlag, 149, 149] call funcGetRandomPos
		_vehicle = [_type, 1, 1, 0, _pos, random 360, _si, giTown, _group, 0, 0] call funcAddServerUnit
		
		_timeAbort = time + 5
		@ (!isNull _vehicle || time > _timeAbort)
	  
  ;player globalchat format["AddTank: %1 (%2)", (towns select _ti) select tdName, count (units _group)]

  ? count _unitsInfantry >= 8 : { deleteVehicle (_unitsInfantry select _x) } forEach [0,1]
~5
  goto "ReinforceReady"

#AddTankH
  ? ((upgMatrix select _si) select upgTownGroupH) != 2: goto "ReinforceReady"
~25
		_type = -1
		while "_type == -1" do { _type = (armorTownH select _si) call funcGetRandomUnitType }
		_pos = [_posFlag, 149, 149] call funcGetRandomPos
		_vehicle = [_type, 1, 1, 0, _pos, random 360, _si, giTown, _group, 0, 0] call funcAddServerUnit
		
		_timeAbort = time + 5
		@ (!isNull _vehicle || time > _timeAbort)
	  
   ;player globalchat format["AddTank: %1 (%2)", (towns select _ti) select tdName, count (units _group)]

  ? count _unitsInfantry >= ( [8,6] select ( ((upgMatrix select _si) select upgTownGroupb) == 2 ) ) : { deleteVehicle (_unitsInfantry select _x) } forEach [0,1]
~5
  goto "ReinforceReady"



#Hibernate
  [_ti, _si] exec "Server\Info\TownGroupHibernate.sqs"
  _unitsSpawn = ("alive _x" count (units _group)); _tanks = 0; _try = 0
  { _v = vehicle _x; if (_v != _x) then {deleteVehicle _v} } forEach (units _group)
  ~1
  {deleteVehicle _x} forEach (units _group)
  
#CheckSpawn
  ~10
  _hibernate = !([_si, _flag, _distSpawn] call funcCheckTGSpawn)
  ? !_hibernate : goto "Spawn"
	? time > _timeReinforce && _unitsSpawn < 12 : _timeReinforce = time + timeReinforceTown; _unitsSpawn = _unitsSpawn + 1
  goto "CheckSpawn"
  
#Spawn
  ? isNull _group : format["ERROR: _group is NULL at spawn for %1 town group in '%1'", sideNames select _si, (towns select _ti) select tdName] call fDebugLog; exit
  [_ti, _si] exec "Server\Info\TownGroupSpawn.sqs"
  ? _unitsSpawn == 0 : goto "Update"
  while "_unitsSpawn > 8" do { _unitsSpawn = _unitsSpawn - 1; _tanks = _tanks + 1 };  _i = 0
  ? _tanks == 0 || ( ((upgMatrix select _si) select upgTownGroupH) != 2 && ((upgMatrix select _si) select upgTownGroupb) != 2 ) : goto "SpawnAddInf"  
  ? ((upgMatrix select _si) select upgTownGroupH) == 2 : goto "SpawnTankH"
  
  #SpawnTank
  _unitsSpawn = 6; if (_tanks >= 2) then { _tanks = 2 }
  #SpawnAddTank
		_type = -1
		while "_type == -1" do { _type = (armorTown select _si) call funcGetRandomUnitType }
		_pos = [_posFlag, 149, 149] call funcGetRandomPos
		_vehicle = [_type, 1, 1, 0, _pos, random 360, _si, giTown, _group, 0, 0] call funcAddServerUnit
		
		_timeAbort = time + 5
		@ (!isNull _vehicle || time > _timeAbort)
	  
  _i = _i + 1
  ? _i < _tanks : goto "SpawnAddTank"
  _i = 0
  goto "SpawnAddInf"
  
  #SpawnTankH
  ? _tanks == 1 : _unitsSpawn = 6
  ? _tanks > 1 && ((upgMatrix select _si) select upgTownGroupb) != 2: _unitsSpawn = 6; if (_tanks > 3) then { _tanks = 3 }
  ? _tanks > 1 && ((upgMatrix select _si) select upgTownGroupb) == 2: _unitsSpawn = 4; if ( _tanks > 4 ) then { _tanks = 4 }
  #SpawnAddTankH
		_type = -1
		while "_type == -1" do { _type = (armorTownH select _si) call funcGetRandomUnitType }
		_pos = [_posFlag, 149, 149] call funcGetRandomPos
		_vehicle = [_type, 1, 1, 0, _pos, random 360, _si, giTown, _group, 0, 0] call funcAddServerUnit
		
		_timeAbort = time + 5
		@ (!isNull _vehicle || time > _timeAbort)
	  
  _i = _i + 1
  ? _i < _tanks : goto "SpawnAddTankH"
  _i = 0
  goto "SpawnAddInf" 
  
  #SpawnAddInf
  _type = -1
  while "_type == -1" do { _type = (infTown select _si) call funcGetRandomUnitType }
  _pos = [_posFlag, 149, 149] call funcGetRandomPos  
  [_type, 0, 0, 0, _pos, random 360, _si, giTown, _group, 0, 0] exec "Common\AddUnit.sqs"
  ~0.2
  _i = _i + 1
  ? _i < _unitsSpawn : goto "SpawnAddInf"
  goto "Update"
  
    
#Support
  ? !(alive _support) : _res = [getPos _flag, _si, typesSupport select _si, []] call funcGetClosestVehicle; goto "Support_VehicleSet"
  _dist = _support distance _flag
  ? _dist > 500 : _res = [getPos _flag, _si, typesSupport select _si, []] call funcGetClosestVehicle; goto "Support_VehicleSet"
  goto "Support_CheckUnits"
  
  #Support_VehicleSet
  _support = _res select 0
  _dist = _res select 1
  ? _dist > 500 : _unitsSupport = []; _unitsSupporting = []; goto "Patrol"
  
  #Support_CheckUnits
  _i = 0
  _units = units _group
  #Support_CheckUnit
    ? !(alive _support) : _unitsSupport = []; _unitsSupporting = []; goto "Patrol"
    ? !(_i < count _units) : goto "Support_Move"
    _u = _units select _i
	_v = vehicle _u
	_i = _i + 1
	
    ? !(alive _u) : goto "Support_CheckUnit"
	? _u in _unitsSupport && (_u distance _support) < rangeSupport : goto "Support_Perform"
	
	_heal = [_u, _si, giTown] call funcCheckRepair
	_rearm = [_u, _si, giTown] call funcCheckRearm
	? (_heal || _rearm) && !(_u in (_unitsSupport + _unitsSupporting)) : _unitsSupport set [count _unitsSupport, _u]; goto "Support_CheckUnit"
	? (_heal || _rearm) && (_u in _unitsSupporting) : _unitsSupporting = _unitsSupporting - [_u, objNull]; _unitsSupport set [count _unitsSupport, _u]; goto "Support_CheckUnit"
	? !_heal && !_rearm : _unitsSupport - [_u, objNull]; _unitsSupporting = _unitsSupporting - [_u, objNull]
	
    goto "Support_CheckUnit"
    
    #Support_Perform
    ; format["UTG: %1 performs support in %2 ", _u, (towns select _ti) select tdName] call fDebugLog
	[_u, _si, giTown, _v, -1, _support] exec "Server\AI_Heal_TownUnit.sqs"
	[_u, _si, giTown, _v, -1, _support] exec "Server\AI_Rearm_TownUnit.sqs"
	_unitsSupport = _unitsSupport - [_u, objNull]; _unitsSupporting set [count _unitsSupporting, _u]
    goto "Support_CheckUnit"
    
  #Support_Move
  _unitsSupport = _unitsSupport - [objNull]
  ; TEST { if (alive _x) then { _posMove = [getPos _support, 5, 5] call funcGetRandomPos; _x doMove _posMove; player globalchat format["UTG: %1 moves to support in %2 ", _x, (towns select _ti) select tdName]; } } forEach _unitsSupport
  { if (alive _x) then { _posMove = [getPos _support, 5, 5] call funcGetRandomPos; _x doMove _posMove } } forEach _unitsSupport
  goto "Patrol"