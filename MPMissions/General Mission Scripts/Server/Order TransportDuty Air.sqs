; args: [unit, si, gi, [wp, wp, dist]]

_unit = _this select 0
_si = _this select 1
_gi = _this select 2
_params = _this select 3
_posPickup = ((wpCO select _si) select (_params select 0))
_posEject = ((wpCO select _si) select (_params select 1))
_distEject = 200*(1+(_params select 2))

_idOrder = ((orderMatrix select _si) select _gi) select 0
_waitloop = 0

#WaitReady
~2
? call busyCheck : goto "WaitReady"

? !(alive _unit) : exit

_sleep = 30

_timeCheckSupport = time + 30 + random 60

? _unit == vehicle _unit || _unit != driver vehicle _unit : goto "Patrol"
_type = (vehicle _unit) call funcGetUnitTypeFromObject
? _type == -1 : goto "Patrol"
? !(_type in (airTransport select _si)) : goto "Patrol"

#TransportDuty
_transp = vehicle _unit
_unit disableAI "TARGET"
; _unit disableAI "AUTOTARGET"

_posPickup set [2, 200]
_posEject set [2, 200]

_distToPickup = [getPos _transp, _posPickup] call funcDistH
_crew = call Cargo_transp
? _distToPickup > 200 && _crew > 2 : goto "MoveEject"
? _distToPickup < 200 && _crew > 10 : goto "MoveOut"
? _distToPickup < 200 && ((getPos _transp) select 2) < 5 : _posMove = [_posPickup, 50, 50] call funcGetRandomPos; goto "WaitForCargo"
? _distToPickup < 200 && ((getPos _transp) select 2) > 5 : _posMove = [_posPickup, 50, 50] call funcGetRandomPos; goto "PrepareLand"

#MovePickup
_transp flyInHeight (400 + random 100)
[_transp] exec "Common\SendTransportTurnOn.sqs"
_posMove = [_posPickup, 50, 50] call funcGetRandomPos
[_unit, _posMove] call funcMoveAI
_timeRepeat = time + 60
#MovePickup_Check
  ~10
  
	; Check Whether Unit in Temporary Order And Quit Script If Order Changed During Temporary Order
	? call temporaryCheck : if (_idOrder != ((orderMatrix select _si) select _gi) select 0) then {exit} else {goto "MovePickup_Check"}
	
  ? !(alive _unit) : exit
  ? _idOrder != ((orderMatrix select _si) select _gi) select 0 : exit
  ? !(alive _transp) || _transp != (vehicle _unit) : goto "Patrol"
  ? time > _timeRepeat : [_unit, _posMove] call funcMoveAI; _timeRepeat = time + 60
  ? ([_posMove, getPos _transp] call funcDistH) > 200 : goto "MovePickup_Check"

[_unit, _si, _gi] exec "Server\AI_CheckSupport.sqs"
#WaitSupportDone
  ~5
  ? !(alive _unit) : exit
  ? (damage _transp) < 0.1 : call busyClear
  ? call busyCheck : goto "WaitSupportDone"
  ? _idOrder != ((orderMatrix select _si) select _gi) select 0 : exit
  ? !(alive _transp) || _transp != (vehicle _unit) : goto "Patrol"

#PrepareLand
_transp flyInHeight (400 + random 100)
#PrepareLand_Check
  [_unit, _posMove] call funcMoveAI
  ~5
  ? !(alive _unit) : exit
  ? _idOrder != ((orderMatrix select _si) select _gi) select 0 : exit
  ? !(alive _transp) || _transp != (vehicle _unit) : goto "Patrol"
  ? ([_posMove, getPos _transp] call funcDistH) > 200 || (speed _transp) > 20 : goto "PrepareLand_Check"

#Land
_transp flyInHeight 50
[_unit, _posMove] call funcMoveAI
_timeRetry = time + 60
#Land_Check
  ~5
  ? !(alive _unit) : exit
  ? _idOrder != ((orderMatrix select _si) select _gi) select 0 : exit
  ? !(alive _transp) || _transp != (vehicle _unit) : goto "Patrol"
  ? time > _timeRetry : goto "PrepareLand"
  ? !(unitReady _unit) && !( ([getPos _transp, _posMove] call funcDistH) < 50 && (speed _transp) < 20 ) : goto "Land_Check"

doStop _unit
_transp land "LAND"
_timeRetry = time + 60
#Landed_Check
  ~5
  ? !(alive _unit) : exit
  ? _idOrder != ((orderMatrix select _si) select _gi) select 0 : exit
  ? !(alive _transp) || _transp != (vehicle _unit) : goto "Patrol"
  ? time > _timeRetry : goto "PrepareLand"
  ? ((getPos _transp) select 2) > 5 : goto "Landed_Check"

#WaitForCargo
  _transp engineOn false
  [_transp] exec "Common\SendTransportTurnOn.sqs"
  ~30
  
	; Check Whether Unit in Temporary Order And Quit Script If Order Changed During Temporary Order
	? call temporaryCheck : if (_idOrder != ((orderMatrix select _si) select _gi) select 0) then {exit} else {goto "WaitForCargo"}
	
  _waitloop = _waitloop + 1; if ( _waitloop > 5 ) then { goto "MoveOut" }
  ? !(alive _unit) : exit
  ? _idOrder != ((orderMatrix select _si) select _gi) select 0 : exit
  ? !(alive _transp) || _transp != (vehicle _unit) : goto "Patrol"
  ? call Cargo_transp > 10 || ( (_type in TransportHindE) && call Cargo_transp >= 8 ) || ( (_type in (TransportSmallHeliW+TransportSmallHeliE)) && call Cargo_transp >= 5 ): goto "MoveOut"
  ? ((getPos _transp) select 2) > 5 : goto "PrepareLand"
  ? call Cargo_transp < 4 : goto "WaitForCargo"
  ? call Cargo_transp > _crew : _crew = call Cargo_transp; goto "WaitForCargo"

#MoveOut
_waitloop = 0
_transp flyInHeight 40
_posMove = [_posEject, 50, 50] call funcGetRandomPos
[_unit, _posMove] call funcMoveAI
~30
? !(alive _unit) : exit
? _idOrder != ((orderMatrix select _si) select _gi) select 0 : exit
? !(alive _transp) || _transp != (vehicle _unit) : goto "Patrol"

#MoveEject
[_transp] exec "Common\SendTransportTurnOff.sqs"
_transp flyInHeight (400 + random 100)
_posMove = [_posEject, 50, 50] call funcGetRandomPos
[_unit, _posMove] call funcMoveAI
_timeRepeat = time + 60
#MoveEject_Check
  ~5
  
	; Check Whether Unit in Temporary Order And Quit Script If Order Changed During Temporary Order
	? call temporaryCheck : if (_idOrder != ((orderMatrix select _si) select _gi) select 0) then {exit} else {goto "MoveEject_Check"}
  
  ? !(alive _unit) : exit
  ? _idOrder != ((orderMatrix select _si) select _gi) select 0 : exit
  ? !(alive _transp) || _transp != (vehicle _unit) : goto "Patrol"
  ? time > _timeRepeat : [_unit, _posMove] call funcMoveAI; _timeRepeat = time + 60
  ? ([_posMove, getPos _transp] call funcDistH) > _distEject : goto "MoveEject_Check"

#EjectCargo
[_transp, _si] exec "Common\EjectAllCargo.sqs"
~10
? !(alive _unit) : exit
? _idOrder != ((orderMatrix select _si) select _gi) select 0 : exit
? !(alive _transp) || _transp != (vehicle _unit) : goto "Patrol"
goto "MovePickup"


#Patrol
  ? _idOrder != ((orderMatrix select _si) select _gi) select 0 : exit
  _this exec "Server\Order TransportDuty.sqs"
  exit

