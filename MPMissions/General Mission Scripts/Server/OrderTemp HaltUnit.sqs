; args: [unit, si, gi, [unit ID, duration]]

_unit = _this select 0
_si = _this select 1
_gi = _this select 2
_params = _this select 3

; Get Correct Parameters. Need Pay Attention To Coefficients
_uid = (_params select 0) + 1
_duration = 720 * ((_params select 1) + 1)

; Check Whether Unit Fits The Parameters Of The Temporary Order
_ids = (groupUnitIDMatrix select _si) select _gi; _uid = _ids select _uid
_units = units group _unit; _text = ""; _selectedUnit = objNull
{ _text = format["%1", _x]; if (_text == _uid) then {_selectedUnit = _x} } forEach _units
? isNull _selectedUnit : format["ERROR: selected unit not located in OrderTemp MoveUnit.sqs."] call fDebugLog; exit
_vehicle = vehicle _selectedUnit
? _vehicle != vehicle _unit : exit

; Check Whether Unit In Another Temporary Order (Except For Set Flight Altitude, Clear Temporary Order, Etc)
? call temporaryCheck : exit

; Initialize The Order Script
_timeStart = time; _timeAbort = _timeStart + _duration; _timeUp = _timeStart; _cycle = 30; _loop = 0
call temporarySet


; Wait For Unit Finish Its Busy-Work
#WaitReady
~2
? time > _timeAbort : 	call temporaryClear; exit
? !call temporaryCheck : exit
? call busyCheck : goto "WaitReady"

; Main Part Of Temporary Order
_timeCheckSupport = time + 30 + random 60
_bCheckDropBomb = true


_groups = groupMatrix select _si
#Update
	_gi = [(group _unit), _groups] call funcGetIndex
	_vehicle = vehicle _unit
	? _unit != driver _vehicle : goto "Sleep"

	; check support
	? time > _timeCheckSupport : _timeCheckSupport = time + timeCheckSupport; [_unit, _si, _gi] exec "Server\AI_CheckSupport.sqs"; _cycle = 10; goto "Sleep"

	; check bomb	
	_bCheckDropBomb = !_bCheckDropBomb 
	? _bCheckDropBomb && _unit == _vehicle && magSatchel in (magazines _unit) : [_unit, _si, _gi] exec "Server\AI_CheckDropBomb.sqs"; _cycle = 10; goto "Sleep"
	
	[_unit, _posMove] call funcMoveAI
	[_unit, _si, _gi] call funcWatch
	? _unit != _vehicle && !(isNull gunner _vehicle) && isNull (commander _vehicle) : [_unit, _si, _gi] exec "Server\AI_CheckFireGun.sqs"
	_cycle = 30
	goto "Sleep"



; End Of File
#EOF
call temporaryClear
exit


#Sleep
_loop = (time-_timeStart)/_cycle; _loop = 1 + _loop - _loop%1
_timeUp = _loop*_cycle + _timeStart

@ ( time > _timeUp || !call temporaryCheck )
? !call temporaryCheck : goto "EOF"
? !(alive _unit) || time > _timeAbort : goto "EOF"
? call busyCheck : goto "Sleep"
goto "Update"