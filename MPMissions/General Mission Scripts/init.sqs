; args : none

dev = false
debug = true
_bool_Infantry_Mode = false; _bool_NeutralTown_Mode = false; _bool_SEMod_Mode = false

; CONSTANTS
si0 = 0
si1 = 1
siRes = 2
siBoth = 3
siCiv = 4
siEnemy = [si1, si0]
sideNames = ["West", "East", "Resistance", "Both", "Civilian"]
sides = [west, east, resistance]
flags = ["\flags\USA.jpg", "\flags\CHINA.jpg", "\flags\FIA.jpg"]


siPlayer = -1
giPlayer = -1
groupPlayer = grpNull
mhq = [objNull, objNull, objNull, objNull, objNull]
MCV = [ [], [], [], [], [] ]
costWorker = 400
maxWorkers = [10, 10]
rangeSupport = 25; rangeSupportPlane = 30; rangeGetPlaneFlyingStatus = 150
sendDelay = 1.0
deleteUnitDelay = [3*60, 60] select dev
maxFlightAltitude = 800
maxFlightAltitudePlus = 700
costRepairMHQ = 30000
blockTime = 60
costRespawn = 0
factorRepairCost = 0.1
factorRepairTime = 0.02
distMaxCC = 200
distMaxCCUpgraded = 10000
iInitNew = 99
bShowGroups = false
bShowInfo = false
bShowMap = false
SpoofMagazines = ["SpoofSwitch_xj200", "SpoofCount_xj200", "SpoofCount_xj200", "SpoofCount_xj200", "SpoofCount_xj200", "SpoofCount_xj200", "SpoofCount_xj200", "SpoofCount_xj200", "SpoofCount_xj200"]
positionAttach = [-1000, -1000, 100]; positionRespawn = [-1000, -1000, 10]

callsigns = ["Alpha", "Bravo", "Charlie", "Delta", "Echo", "Foxtrot", "Golf", "Hotel", "Kilo", "November", "Yankee", "Zulu", "Two", "Three", "Buffalo", "Guardian", "Convoy", "Fox" ]
GroupsNum = (count callsigns) + 2
giTown = GroupsNum - 2
giWorker = GroupsNum - 1
maxQ = 1000
TotalInfoTypes = 100
; these constants are used for calculating "value" in publicVariable operation.
; "TotalInfoTypes" could be defined in "InitInfoMsgTypes" as well.
; cautious: number in OFP is "Single" so it's necessary to make sure the value of "value" less than 15,000,000

Cargo_v = "count (crew _v - [driver _v, gunner _v, commander _v])"
Cargo_transp = "count (crew _transp - [driver _transp, gunner _transp, commander _transp])"
grpSetting = "((aiSetting select _si) select _gi)"
Musics0=["Track1","Track2","Track3","Track4","Track5","Track6","Track7","Track8","Track9","Track11","Track12","Track15","Track16","Frost","RTrack1a","RTrack4","RTrack5","RTrack8","RTrack9","RTrack10"]
music0=0
Musics1h=["Track14","RTrack1b","RTrack3","RTrack6","RTrack7"]
music1h=0
Musics10m=["Track1","Track2","Track3","Track4","Track5","Track6","Track7","Track8","Track10","RTrack2"]
music10m=0

; game properties (see description.ext)

? ( (param1 % 20) < 10) : fixedStartPos = 1
? ( (param1 % 20) in [10,11,12,16,17]) : fixedStartPos = 2
? ( (param1 % 20) in [13,14,15,18,19]) : fixedStartPos = 3

? ( (param1 % 20) in ([0,1,2,3,4] + [10,11,12,13,14,15]) ) : Incomex = 1
? ( (param1 % 20) in ([5,6,7,8,9] + [16,17,18,19]) ) : Incomex = 2

? ( (param1 % 20) in [0,5,10,13]) : restanksx = 1
? ( (param1 % 20) in [1,6,16,18]) : restanksx = 2
? ( (param1 % 20) in [2,7,11,14]) : restanksx = 3
? ( (param1 % 20) in [3,8,17,19]) : restanksx = 4
? ( (param1 % 20) in [4,9,12,15]) : restanksx = 5

timeLimit = ( [4,6,3,0] select ( (param1 - param1 % 20)/20 ) )*60*60
maxGroupSize = 12
WeatherChosen = (param2 % 100) % 8
ZeroTime = ( (param2 % 100) - WeatherChosen ) / 8
viewDistance = param2 - (param2 % 100)
SkipTime ([0,9,15,21,0] select ZeroTime)
? ZeroTime == 4 : [60] exec "Common\TimeSkip.sqs"
PricingMode = 0
setViewDistance viewDistance
;player globalchat format ["fixedStartPos=%1, timeLimit=%2, maxGroupSize=%3, viewDistance=%4" ,fixedStartPos, timeLimit, maxGroupSize, viewDistance]

; UPGRADES
; upgDefs entry format: [sName, nCost, nMinutes]
; The constant used for passing upg is 100 thus quite enough up till now
_type = 0
upgDefs = []

upgTL = _type; 					upgDefs set [_type, ["Update Leader Weapons", [4000, 100] select dev, [1, 0] select dev]]; _type=_type+1

upgTownGroup = _type; 			upgDefs set [_type, ["Town Groups", [4000, 100] select dev, [1, 0] select dev]]; _type=_type+1

upgTownGroupb = _type; 			upgDefs set [_type, ["Town Groups Armor", [15000, 100] select dev, [3, 0] select dev]]; _type=_type+1
_TGHcost = 60000 + 5000*restanksx
upgTownGroupH = _type; 			upgDefs set [_type, ["Town Armors Heavy", [_TGHcost, 100] select dev, [5, 0] select dev]]; _type=_type+1

upgRadarArtillery = _type; 		upgDefs set [_type, ["Artillery Radar", [5000, 100] select dev, [2, 0] select dev]]; _type=_type+1

; upgLongWeaponRange = _type; 	upgDefs set [_type, ["Double Range Weapons", [30000, 100] select dev, [3, 0] select dev]]; _type=_type+1
upgLongWeaponRange = _type; 	upgDefs set [_type, [format["%1m Range Weapons", 2*viewDistance], [30000, 100] select dev, [3, 0] select dev]]; _type=_type+1

; upgCCdistance = _type; 		upgDefs set [_type, [format[ "%1m CC range ", distMaxCCUpgraded ], [20000, 100] select dev, [3, 0] select dev]]; _type=_type+1
upgCCdistance = _type; 			upgDefs set [_type, ["10000m CC Range", [20000, 100] select dev, [3, 0] select dev]]; _type=_type+1

upgNumBuildings = _type; 		upgDefs set [_type, ["More Buildings", [20000, 100] select dev, [3, 0] select dev]]; _type=_type+1

upgSatCam = _type; 				upgDefs set [_type, ["Satellite Camera", [35000, 100] select dev, [5, 0] select dev]]; _type=_type+1

upgSatCamZoom = _type; 			upgDefs set [_type, ["Satellite Camera Zoom", [20000, 100] select dev, [1, 0] select dev]]; _type=_type+1

upgSpySat = _type; 				upgDefs set [_type, ["Spy Satellite", [95000, 100] select dev, [6, 0] select dev]]; _type=_type+1

upgTrackArtBullet = _type; 		upgDefs set [_type, ["Track Art Bullet", [10000, 100] select dev, [2, 0] select dev]]; _type=_type+1

upgWorkers = _type; 			upgDefs set [_type, ["Upgrade Workers", [5000, 100] select dev, [2, 0] select dev]]; _type=_type+1

upgGunshipRocket = _type; 		upgDefs set [_type, ["Helicopter Rockets", [25000, 100] select dev, [3, 0] select dev]]; _type=_type+1

upgPlaneAfterBurner = _type; 	upgDefs set [_type, ["Plane After Burner", [20000, 100] select dev, [3, 0] select dev]]; _type=_type+1

upgSpoofMissile = _type; 		upgDefs set [_type, ["Aircraft Spoof Missile", [20000, 100] select dev, [3, 0] select dev]]; _type=_type+1

upgAltFlight = _type; 			upgDefs set [_type, ["1500m Flight Altitude", [30000, 100] select dev, [3, 0] select dev]]; _type=_type+1

upgVehicleAirRadar = _type; 	upgDefs set [_type, ["Vulcan/Shilka AirRadar", [8000, 100] select dev, [2, 0] select dev]]; _type=_type+1

upgRedTopRange = _type; 		upgDefs set [_type, ["4xAA Missile Range", [8000, 100] select dev, [2, 0] select dev]]; _type=_type+1

upgRedTopMagazines = _type; 	upgDefs set [_type, ["4xAA Double Mags", [8000, 100] select dev, [2, 0] select dev]]; _type=_type+1


; upgMatrix entry format: 0=not begun, 1=in progress, 2=upgraded
upgMatrix = [ [], [] ]
_index = 0
{ (upgMatrix select si0) set [_index, 0]; (upgMatrix select si1) set [_index, 0]; _index=_index+1} foreach upgDefs

; SCORE
_type = 0
scoreDefs = []
scInfantry = _type; scoreDefs set [_type, ["Infantry",1]]; _type=_type+1
scVehicle = _type; scoreDefs set [_type, ["Vehicle",2]]; _type=_type+1
scMHQ = _type; scoreDefs set [_type, ["MHQ",10]]; _type=_type+1
scStruct = _type; scoreDefs set [_type, ["Struct",4]]; _type=_type+1
scTown = _type; scoreDefs set [_type, ["Town",4]]; _type=_type+1

_scoreStart = []
_scoreStart resize (count scoreDefs)
_index = 0
{ _scoreStart set [_index, 0]; _index=_index+1 } foreach _scoreStart

groupMatrix = [[], [], []]
groupNameMatrix = [[], []]
groupUnitIDMatrix = [[], []]
groupAiMatrix = [[], []]
groupMoneyMatrix = [[], []]
groupUnitsBuildingMatrix = [[], []]
groupScoreMatrix = [[], []]
groupCommander = [grpNull, grpNull]
giCO = [0, 0]


_groups = []
_groupNames = []

_i = 0
_c = count callsigns
#SetGroupID
  _si = si0
  _groups = groupMatrix select _si
  _groupNames = groupNameMatrix select _si
  _group = format["Group%1%2", callsigns select _i, _si]
  _test = format["%1 != grpNull", _group]
  ? call _test : call format["%1 setGroupId [""%2"", ""GroupColor0""]", _group, callsigns select _i]; call format["_groups set [count _groups, %1]", _group]; call format["_groupNames set [count _groupNames, ""%1""]", callsigns select _i]; _ids = []; _j = 0; while "_j <= 12" do { _ids set [_j, format["%1 %2:%3", sideNames select _si, callsigns select _i, _j] ]; _j = _j + 1 }; _UID = groupUnitIDMatrix select _si; _UID set [count _UID, _ids]

  _si = si1
  _groups = groupMatrix select _si
  _groupNames = groupNameMatrix select _si
  _group = format["Group%1%2", callsigns select _i, _si]
  _test = format["%1 != grpNull", _group]
  ? call _test : call format["%1 setGroupId [""%2"", ""GroupColor0""]", _group, callsigns select _i]; call format["_groups set [count _groups, %1]", _group]; call format["_groupNames set [count _groupNames, ""%1""]", callsigns select _i]; _ids = []; _j = 0; while "_j <= 12" do { _ids set [_j, format["%1 %2:%3", sideNames select _si, callsigns select _i, _j] ]; _j = _j + 1 }; _UID = groupUnitIDMatrix select _si; _UID set [count _UID, _ids]

  _i = _i + 1
  ? _i < _c : goto "SetGroupID"

; Planning to Initialize worker and town groups


_si = si0
_i = 0
_c = count (groupMatrix select _si)
? _c == 0 : goto "Side0Empty"
groupCommander set [_si, (groupMatrix select _si) select 0]
#InitSide0Groups
	(groupMoneyMatrix select _si) set [_i, 0]
	(groupUnitsBuildingMatrix select _si) set [_i, 0]
	(groupScoreMatrix select _si) set [_i, +_scoreStart]
	_i = _i + 1
	? _i < _c : goto "InitSide0Groups"
#Side0Empty

_si = si1
_i = 0
_c = count (groupMatrix select _si)
? _c == 0 : goto "Side1Empty"
groupCommander set [_si, (groupMatrix select _si) select 0]
#InitSide1Groups
	(groupMoneyMatrix select _si) set [_i, 0]
	(groupUnitsBuildingMatrix select _si) set [_i, 0]
	(groupScoreMatrix select _si) set [_i, +_scoreStart]
	_i = _i + 1
	? _i < _c : goto "InitSide1Groups"
#Side1Empty
InitStructureReady = false

_initUnitTypes = "Common\InitUnitTypes.sqs"; _initStructureTypes = "Common\InitStructureTypes.sqs"
? _bool_Infantry_Mode : _initUnitTypes = "Common\InitUnitTypes_Infantry_Mode.sqs"; _initStructureTypes = "Common\InitStructureTypes_Infantry_Mode.sqs"
[] exec "Common\InitPublicVariables.sqs"
[] exec _initStructureTypes
[] exec _initUnitTypes
[] exec "Common\InitInfoMsgTypes.sqs"
[] exec "Common\InitEquipmentTypes.sqs"


; town descriptor indexes
tdFlag = 0
tdName = 1
tdValue = 2
tdSide = 3

; init functions (stuff that return values)
fAddSoldier = preprocessFile "Common\AddSoldier.sqf"
fAddVehicle = preprocessFile "Common\AddVehicle.sqf"
funcGetClosestTown = preprocessFile "Common\GetClosestTown.sqf"
funcGetClosestEnemyTown = preprocessFile "Common\GetClosestEnemyTown.sqf"
funcCalcDistanceToObject = preprocessFile "Common\CalcDistanceToObject.sqf"
funcDistH = preprocessFile "Common\DistH.sqf"
funcGetIndex = preprocessFile "Common\GetIndex.sqf"
funcGetStructures = preprocessFile "Common\GetStructures.sqf"
funcGetClosestStructure = preprocessFile "Common\GetClosestStructure.sqf"
funcGetNearestStructure = preprocessFile "Common\GetNearestStructure.sqf"
funcGetWorkingStructures = preprocessFile "Common\GetWorkingStructures.sqf"
funcGetWorkingStructuresWithinCCRange = preprocessFile "Player\GetWorkingStructuresWithinCCRange.sqf"
funcCalcUnitPlacementPosDir = preprocessFile "Common\CalcUnitPlacementPosDir.sqf"
; funcCountStructures = preprocessFile "Common\CountStructures.sqf"
funcCountUnits = preprocessFile "Common\CountUnits.sqf"
funcSort = preprocessFile "Common\Sort.sqf"
funcGetNearbySoldiers = preprocessFile "Common\GetNearbySoldiers.sqf"
funcGetNearbyVehicles = preprocessFile "Common\GetNearbyVehicles.sqf"
funcGetNearbyVehiclesBySide = preprocessFile "Common\GetNearbyVehiclesBySide.sqf"
funcGetNearbyStructure = preprocessFile "Common\GetNearbyStructure.sqf"
funcGetClosestVehicle = preprocessFile "Common\GetClosestVehicle.sqf"
funcGetClosestVehicleEmpty = preprocessFile "Common\GetClosestVehicleEmpty.sqf"
funcGetRandomPos = preprocessFile "Common\GetRandomPos.sqf"
funcVectorAdd = preprocessFile "Common\VectorAdd.sqf"
funcVectorSub = preprocessFile "Common\VectorSub.sqf"
funcVectorScale = preprocessFile "Common\VectorScale.sqf"
funcVectorDot = preprocessFile "Common\VectorDot.sqf"
funcVectorCross = preprocessFile "Common\VectorCross.sqf"
funcVectorLength = preprocessFile "Common\VectorLength.sqf"
funcVectorRot = preprocessFile "Common\VectorRot.sqf"
funcGetClosestEnemyObject = preprocessFile "Common\GetClosestEnemyObject.sqf"
funcGetClosestUnit = preprocessFile "Common\GetClosestUnit.sqf"
funcGetRandomUnitType = preprocessFile "Common\GetRandomUnitType.sqf"
funcGetUnitTypeFromObject = preprocessFile "Common\GetUnitTypeFromObject.sqf"
funcGetStructTypeFromObject = preprocessFile "Common\GetStructTypeFromObject.sqf"
funcAddToUnitMatrix = preprocessFile "Common\AddToUnitMatrix.sqf"
funcAddToStructMatrix = preprocessFile "Common\AddToStructMatrix.sqf"
funcAddRearmData = preprocessFile "Common\AddRearmData.sqf"
funcEditRearmdata = preprocessFile "Common\EditRearmData.sqf"
funcGetRearmData = preprocessFile "Common\GetRearmData.sqf"
funcHASL = preprocessFile "Common\HASL.sqf"
funcPosNearSea = preprocessFile "Common\PosNearSea.sqf"
funcHighObjects = preprocessFile "Common\HighObjects.sqf"
funcInForest = preprocessFile "Common\InForest.sqf"
funcBaseArea = preprocessFile "Common\BaseArea.sqf"
funcStartPos = preprocessFile "Common\StartPos.sqf"
funcAreaFlat = preprocessFile "Common\AreaFlat.sqf"
funcGetNearestRespawnObject = preprocessFile "Common\GetNearestRespawnObject.sqf"
fSendTextMsg = preprocessFile "Common\SendTextMsg.sqf"
fDebugLog = preprocessFile "Common\DebugLog.sqf"
funcSearchvehicleAttached = preprocessFile "Common\SearchvehicleAttached.sqf"
funcUpdateAttaching = preprocessFile "Common\UpdateAttaching.sqf"
funcGetAIGroupsIndex = preprocessFile "Common\GetAIGroupsIndex.sqf"

funcVectorRot3D = preprocessFile "Common\VectorRot3D.sqf"
funcRandomRotation3D = preprocessFile "Common\RandomRotation3D.sqf"

; AI GROUP SETTINGS
; setting definition entry format: [ name, [s0, s1, ...], default ]
aiSettingDefs = []
_type = 0

aisPickupWaitTimeDefs = [0, 120, 240, 360, 480, 600, 720, 840, 960, 1080, 1800, 3600, 5940]; aisPickupWaitTimeDisp = []
{ aisPickupWaitTimeDisp set [ count aisPickupWaitTimeDisp, call format["%3%2%1%3", "min", _x/60, """" ] ] } foreach aisPickupWaitTimeDefs
aisPickupWaitTimeDisp set [0, "Don't use"]
aisRallyPoint = _type
aiSettingDefs set [_type, ["Rally Point 1#", ["None", "co0", "co1", "co2", "co3", "co4", "co5", "co6", "co7", "co8", "co9", "co10", "co11", "co12", "co13", "co14", "co15", "co16", "co17", "co18", "co19"], 0, "Rally Points and Pickup Wait Setting"] ]
_type = _type + 1
aisPickupWait = _type
aiSettingDefs set [_type, ["Pickup Wait 1#", aisPickupWaitTimeDisp, 1, ""] ]
_type = _type + 1
aisRallyPoint2 = _type
aiSettingDefs set [_type, ["Rally Point 2#", ["None", "co0", "co1", "co2", "co3", "co4", "co5", "co6", "co7", "co8", "co9", "co10", "co11", "co12", "co13", "co14", "co15", "co16", "co17", "co18", "co19"], 0, ""] ]
_type = _type + 1
aisPickupWait2 = _type
aiSettingDefs set [_type, ["Pickup Wait 2#", aisPickupWaitTimeDisp, 0, ""] ]
_type = _type + 1


aisKeepDefs = [0, 50, 100, 150, 200, 250, 300, 350, 400, 500, 600, 800, 1000, 1500, 2000, 5000, 6500, 10000, 35000, 95000]; aisKeepDisp = []
{ if (_x < 1000) then {aisKeepDisp set [ count aisKeepDisp, call format["%3%1%2%3", "$", _x, """" ] ]} } foreach aisKeepDefs
aisKeepMin = _type
aiSettingDefs set [_type, ["Keep At Least", aisKeepDisp, 0, "Keep At Least/At Most"] ]
_type = _type + 1
aisKeepDisp = []; {aisKeepDisp set [ count aisKeepDisp, call format["%3%1%2%3", "$", _x, """" ] ] } foreach aisKeepDefs
aisKeepMax = _type
aiSettingDefs set [_type, ["Keep At Most", aisKeepDisp, 2, ""] ]
_type = _type + 1


aisBuy = _type
aiSettingDefs set [_type, ["Auto-Buy", ["none", "Soldier", "MG/Snipers", "LAW/RPG-Infantry", "LAW/RPG+M21/SVD", "LAW/RPG-Mixed", "AT-Infantry", "AT+M21/SVD", "AT-mixed", "AA-Infantry", "AA/Snipers", "AA/AT-Sniper", "Infantry-Mixed", "Armor Mixed", "T72/M60", "Armor-Heavy", "M2A2/BMP2-AT", "AA-Heavy", "AA-Vehicles", "Saboteurs", "Miners", "Transp-Land", "Transp-Air", "Support Vehicles", "Planes", "AH1/V80", "AH64/Mi24"], 0, "Auto-Buy"] ]
_type = _type + 1

BuyFactory = ["No Struct", "1# Barrack", "2# Barrack", "3# Barrack", "4# Barrack", "1# Heavy", "2# Heavy", "3# Heavy", "4# Heavy" ]
aisBuyFactory1 = _type
aiSettingDefs set [_type, ["Buy Factory 1", BuyFactory, 0, "Buy Factory 1, 2"] ]
_type = _type + 1
aisBuyFactory2 = _type
aiSettingDefs set [_type, ["Buy Factory 2", BuyFactory, 0, ""] ]
_type = _type + 1
aisBuyFactory3 = _type
aiSettingDefs set [_type, ["Buy Factory 3", BuyFactory, 0, "Buy Factory 3, 4"] ]
_type = _type + 1
aisBuyFactory4 = _type
aiSettingDefs set [_type, ["Buy Factory 4", BuyFactory, 0, ""] ]
_type = _type + 1


aisWatch = _type
aiSettingDefs set [_type, ["Watch", ["Scan", "N", "NE", "E", "SE", "S", "SW", "W", "NW"], 0, "Watch"] ]
_type = _type + 1
aisRespawn = _type
aiSettingDefs set [_type, ["Respawn", ["Default", "1# Command", "2# Command", "3# Command", "4# Command", "1# Barrack", "2# Barrack", "3# Barrack", "4# Barrack", "1# Light", "2# Light", "3# Light", "4# Light", "1# Heavy", "2# Heavy", "3# Heavy", "4# Heavy", "1# Air", "2# Air", "3# Air", "4# Air"], 0, "Respawn"] ]
_type = _type + 1
aisCombatMode = _type
aisCombatModeDefs = [ "YELLOW", "RED", "GREEN", "BLUE" ]
aiSettingDefs set [_type, ["CombatMode", ["Disengage", "Engage@Will", "HoldFire", "NeverFire"], 0, "CombatMode"] ]
_type = _type + 1
aisBehaviour = _type
aisBehaviourDefs = [ "AWARE", "COMBAT", "STEALTH", "CARELESS" ]
aiSettingDefs set [_type, ["Behaviour", aisBehaviourDefs, 0, "Behaviour"] ]
_type = _type + 1


aisAutoSupportRangeDefs = [100, 150, 200, 300, 400, 500, 800, 1000, 1200, 1500]; aisAutoSupportRange = []
{aisAutoSupportRange set [ count aisAutoSupportRange, call format["%3%2%1%3", "m", _x, """" ] ] } foreach aisAutoSupportRangeDefs
aisAutoRepair = _type
aiSettingDefs set [_type, ["Repair Place", ["At Both Sup", "At Our Sup", "Don't Use"], 0, "RepairPlace"] ]
_type = _type + 1
aisAutoRepairRange = _type
aiSettingDefs set [_type, ["Repair Range", aisAutoSupportRange, 9, "RepairRange"] ]
_type = _type + 1
aisAutoRepairDamage = _type
aiSettingDefs set [_type, ["Repair Rate", ["0%","5%","10%","15%","20%","25%","30%","35%","40%","45%","50%","55%","60%","65%","70%","75%","80%","85%","90%","95%"], 4, "Repair Rate"] ]
_type = _type + 1

aisAutoRearm = _type
aiSettingDefs set [_type, ["Rearm Place", ["At Both Sup", "At Our Sup", "Don't Use"], 0, "Rearm Place"] ]
_type = _type + 1
aisAutoRearmRange = _type
aiSettingDefs set [_type, ["Rearm Range", aisAutoSupportRange, 9, "RearmRange"] ]
_type = _type + 1
aisAutoRearmSabot = _type
aiSettingDefs set [_type, ["Rearm Sabot", ["0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15"], 7, "Rearm Sabot"] ]
_type = _type + 1


aisSuperior = _type
aiSettingDefs set [_type, ["Superior", ["Commander"] + callsigns, 0, "Superior"] ]
_type = _type + 1

aisGroupSize = _type
aiSettingDefs set [_type, ["Group Size", ["Default","1","2","3","4","5","6","7","8","9","10","11","12"], 0, "Group Size"] ]
_type = _type + 1


aisLockOrder = _type
aiSettingDefs set [_type, ["Lock Order", ["Unlock", "Lock"], 0, "Lock Order\Setting"] ]
_type = _type + 1
aisLockSetting = _type
aiSettingDefs set [_type, ["Lock Setting", ["Unlock", "Lock"], 0, ""] ]
_type = _type + 1

aisMoveMode = _type
aiSettingDefs set [_type, ["Move Mode", ["Default", "StepByStep"], 0, "Move Mode"] ]
_type = _type + 1


_default = []
{ _default set [count _default, _x select 2] } foreach aiSettingDefs

; current setting entry format: [orderID, orderType, [param0, param1, ...]]
aiSetting = [ [], [] ]
_si = si0; _list = aiSetting select _si; { _list set [ count _list, +_default ] } foreach (groupMatrix select _si)
_si = si1; _list = aiSetting select _si; { _list set [ count _list, +_default ] } foreach (groupMatrix select _si)
aiBuying = [ [], [] ]
_si = si0; _list = aiSetting select _si; { _list set [ count _list, [0,0,0,0] ] } foreach (groupMatrix select _si)
_si = si1; _list = aiSetting select _si; { _list set [ count _list, [0,0,0,0] ] } foreach (groupMatrix select _si)

; AI Auto-Buy Factory Selected by Setting. Format: [ [Factory1], [Factory2], [Factory3], [Factory4] ]
; abandoned. maybe use it in next version
; aiAutoBuyFactory = [ [], [] ]
; _si = si0; _list = aiAutoBuyFactory select _si; { _list set [ count _list, [ [objNull, -1], [objNull, -1], [objNull, -1], [objNull, -1] ] ] } foreach (groupMatrix select _si)
; _si = si1; _list = aiAutoBuyFactory select _si; { _list set [ count _list, [ [objNull, -1], [objNull, -1], [objNull, -1], [objNull, -1] ] ] } foreach (groupMatrix select _si)


; AI GROUP ORDERS
; order def entry format: [name, params, script]
; order def param format: [name, countFunc, toTextFunc]
funcDirIndexToText = "[""All"", ""N"", ""NE"", ""E"", ""SE"", ""S"", ""SW"", ""W"", ""NW""] select _this"
orderDefs = []
_type = 0

orderTakeTowns = _type
orderDefs set [_type, ["Take Towns", [], "Order TakeTowns.sqs"] ]
_type = _type + 1

orderTakeHoldTowns = _type
_param0 = ["Hold Distance", "5", "format [""<%1m"", 500*(_this+1)]"]
_param1 = ["Hold Time", "10", "format [""%1min"", 5*(_this+1)]"]
orderDefs set [_type, ["Take Hold Towns", [_param0, _param1], "Order TakeHoldTowns.sqs"] ]
_type = _type + 1

orderHoldTown = _type
_param0 = [ "Town", "count towns", "(towns select _this) select 1" ]
_param1 = [ "Defend Distance", "10", "format [""%1m"", 50*(_this+1)]" ]
_param2 = [ "Defend Direction", "9", funcDirIndexToText ]
orderDefs set [_type, ["Hold Town", [_param0, _param1, _param2], "Order HoldTown.sqs"] ]
_type = _type + 1

orderGuardArea = _type
_param0 = [ "Waypoint", "count (wpCO select siPlayer)", "_posRelTown = ((wpCO select siPlayer) select _this) call funcCalcTownDirDistFromPos; format[""co%1 %2"", _this, [_posRelTown, """"] select ((((wpCO select siPlayer) select _this) select 0) == -1)]" ]
_param1 = [ "Defend Distance", "10", "format [""%1m"", 50*(_this+1)]" ]
_param2 = [ "Defend Direction", "9", funcDirIndexToText ]
orderDefs set [_type, ["Guard Area", [_param0, _param1, _param2], "Order GuardArea.sqs"] ]
_type = _type + 1

orderGuardLine = _type
_param0 = [ "Waypoint", "count (wpCO select siPlayer)", "_posRelTown = ((wpCO select siPlayer) select _this) call funcCalcTownDirDistFromPos; format[""co%1 %2"", _this, [_posRelTown, """"] select ((((wpCO select siPlayer) select _this) select 0) == -1)]" ]
_param1 = [ "Waypoint", "count (wpCO select siPlayer)", "_posRelTown = ((wpCO select siPlayer) select _this) call funcCalcTownDirDistFromPos; format[""co%1 %2"", _this, [_posRelTown, """"] select ((((wpCO select siPlayer) select _this) select 0) == -1)]" ]
orderDefs set [_type, ["Guard Line", [_param0, _param1], "Order GuardLine.sqs"] ]
_type = _type + 1

orderPatrolArea = _type
_param0 = [ "Waypoint", "count (wpCO select siPlayer)", "_posRelTown = ((wpCO select siPlayer) select _this) call funcCalcTownDirDistFromPos; format[""co%1 %2"", _this, [_posRelTown, """"] select ((((wpCO select siPlayer) select _this) select 0) == -1)]" ]
_param1 = [ "Patrol Radius", "10", "format [""%1m"", 50*(_this+1)]" ]
orderDefs set [_type, ["Patrol Area", [_param0, _param1], "Order PatrolArea.sqs"] ]
_type = _type + 1

orderPatrolLine = _type
_param0 = [ "Waypoint", "count (wpCO select siPlayer)", "_posRelTown = ((wpCO select siPlayer) select _this) call funcCalcTownDirDistFromPos; format[""co%1 %2"", _this, [_posRelTown, """"] select ((((wpCO select siPlayer) select _this) select 0) == -1)]" ]
_param1 = [ "Waypoint", "count (wpCO select siPlayer)", "_posRelTown = ((wpCO select siPlayer) select _this) call funcCalcTownDirDistFromPos; format[""co%1 %2"", _this, [_posRelTown, """"] select ((((wpCO select siPlayer) select _this) select 0) == -1)]" ]
orderDefs set [_type, ["Patrol Line", [_param0, _param1], "Order PatrolLine.sqs"] ]
_type = _type + 1

orderAdvance = _type
_param0 = [ "Waypoint", "count (wpCO select siPlayer)", "_posRelTown = ((wpCO select siPlayer) select _this) call funcCalcTownDirDistFromPos; format[""co%1 %2"", _this, [_posRelTown, """"] select ((((wpCO select siPlayer) select _this) select 0) == -1)]" ]
_param1 = [ "Meters/minute", "10", "format [""%1m"", 100*(_this+1)]" ]
orderDefs set [_type, ["Advance", [_param0, _param1], "Order Advance.sqs"] ]
_type = _type + 1

orderTransportDuty = _type
_param0 = [ "Pickup Pos", "count (wpCO select siPlayer)", "_posRelTown = ((wpCO select siPlayer) select _this) call funcCalcTownDirDistFromPos; format[""co%1 %2"", _this, [_posRelTown, """"] select ((((wpCO select siPlayer) select _this) select 0) == -1)]" ]
_param1 = [ "Eject Pos", "count (wpCO select siPlayer)", "_posRelTown = ((wpCO select siPlayer) select _this) call funcCalcTownDirDistFromPos; format[""co%1 %2"", _this, [_posRelTown, """"] select ((((wpCO select siPlayer) select _this) select 0) == -1)]" ]
_param2 = [ "Eject Distance", "5", "format [""%1m"", 200*(_this+1)]" ]
orderDefs set [_type, ["Transport Duty", [_param0, _param1, _param2], "Order TransportDuty.sqs"] ]
_type = _type + 1

orderMineLine = _type
_param0 = [ "Waypoint", "count (wpCO select siPlayer)", "_posRelTown = ((wpCO select siPlayer) select _this) call funcCalcTownDirDistFromPos; format[""co%1 %2"", _this, [_posRelTown, """"] select ((((wpCO select siPlayer) select _this) select 0) == -1)]" ]
_param1 = [ "Waypoint", "count (wpCO select siPlayer)", "_posRelTown = ((wpCO select siPlayer) select _this) call funcCalcTownDirDistFromPos; format[""co%1 %2"", _this, [_posRelTown, """"] select ((((wpCO select siPlayer) select _this) select 0) == -1)]" ]
orderDefs set [_type, ["Mine Line", [_param0, _param1], "Order MineLine.sqs"] ]
_type = _type + 1

orderDisableMines = _type
_param0 = [ "Waypoint", "count (wpCO select siPlayer)", "_posRelTown = ((wpCO select siPlayer) select _this) call funcCalcTownDirDistFromPos; format[""co%1 %2"", _this, [_posRelTown, """"] select ((((wpCO select siPlayer) select _this) select 0) == -1)]" ]
orderDefs set [_type, ["Disable Mines", [_param0], "Order DisableMines.sqs"] ]
_type = _type + 1

;orderReclaim = _type
;ReclaimTypeDefs = ["Transport Car", "Transport Ship", "Transport APC", "Transport Heli", "Battle Ship", "Light Tank", "Heavy Tank", "Howitzer", "AT APC", "AA Vehicle", "Kamov", "Cobra\Apac\Hind", "Transports", "Tanks", "APCs", "Support APC"]
;_param0 = [ "Waypoint", "count (wpCO select siPlayer)", "_posRelTown = ((wpCO select siPlayer) select _this) call funcCalcTownDirDistFromPos; format[""co%1 %2"", _this, [_posRelTown, """"] select ((((wpCO select siPlayer) select _this) select 0) == -1)]" ]
;_param1 = [ "Vehicle type", "count ReclaimTypeDefs", "format [""%1"", ReclaimTypeDefs select _this ]" ]
;_param2 = [ "Reciaim Radius", "10", "format [""%1m"", 50*(_this+1)]" ]
;orderDefs set [_type, ["Reclaim", [_param0, _param1, _param2], "Order Reclaim.sqs"] ]
;_type = _type + 1

;orderOccupy = _type
;OccupyTypeDefs = ["All Defense", "Mortar", "MG Ground", "MG Tower", "M46", "M46 Art", "Gun Fort"]
;_param0 = [ "Waypoint", "count (wpCO select siPlayer)", "_posRelTown = ((wpCO select siPlayer) select _this) call funcCalcTownDirDistFromPos; format[""co%1 %2"", _this, [_posRelTown, """"] select ((((wpCO select siPlayer) select _this) select 0) == -1)]" ]
;_param1 = [ "Structure type", "count OccupyTypeDefs", "format [""%1"", OccupyTypeDefs select _this ]" ]
;_param2 = [ "Occupy Radius", "10", "format [""%1m"", 50*(_this+1)]" ]
;orderDefs set [_type, ["Occupy", [_param0, _param1, _param2], "Order Occupy.sqs"] ]
;_type = _type + 1

;orderBoard = _type
;BoardTypeDefs = ["Car", "Truck", "Zodiac", "Ship", "APC", "Heli", "Plane"]
;_param0 = [ "Waypoint", "count (wpCO select siPlayer)", "_posRelTown = ((wpCO select siPlayer) select _this) call funcCalcTownDirDistFromPos; format[""co%1 %2"", _this, [_posRelTown, """"] select ((((wpCO select siPlayer) select _this) select 0) == -1)]" ]
;_param1 = [ "Transport type", "count BoardTypeDefs", "format [""%1"", BoardTypeDefs select _this ]" ]
;_param2 = [ "Board Radius", "10", "format [""%1m"", 50*(_this+1)]" ]
;orderDefs set [_type, ["Board", [_param0, _param1, _param2], "Order Board.sqs"] ]
;_type = _type + 1

;orderLand = _type
;LandTypeDefs = ["All Helicopters", "Transport Heli", "Gunship"]
;_param0 = [ "Waypoint", "count (wpCO select siPlayer)", "_posRelTown = ((wpCO select siPlayer) select _this) call funcCalcTownDirDistFromPos; format[""co%1 %2"", _this, [_posRelTown, """"] select ((((wpCO select siPlayer) select _this) select 0) == -1)]" ]
;_param1 = [ "Helicopter type", "count LandTypeDefs", "format [""%1"", LandTypeDefs select _this ]" ]
;orderDefs set [_type, ["Land Helicopters", [_param0, _param1], "Order Land.sqs"] ]
;_type = _type + 1

orderHalt = _type
orderDefs set [_type, ["Halt", [], "Order Halt.sqs"] ]
_type = _type + 1





; order entry format: [orderID, orderType, [param0, param1, ...]]
orderMatrix = [ [], [] ]
_si = si0; _gi = 0; { (orderMatrix select _si) set [ _gi, [0, orderTakeHoldTowns, [3, 1]] ]; _gi = _gi + 1 } foreach (groupMatrix select _si)
_si = si1; _gi = 0; { (orderMatrix select _si) set [ _gi, [0, orderTakeHoldTowns, [3, 1]] ]; _gi = _gi + 1 } foreach (groupMatrix select _si)


; Temporary AI Group Orders
; Different from "AI Group Orders". Temporary means the command is temporary, units fits the parameters of the command will break off from the "AI Group Order" and follow the Temporary Order for a period, then return to the "AI Group Order"

; Constants used in Temporary Orders' Send/Msg Scripts
TempOrderNum = 30; TempParamNum = 10; TempParam0 = 30; TempParam1 = 30; TempParam2 = 20; TempParam3 = 20; TempParam4 = 20;

; orderTemp def entry format: [name, params, script]
; orderTemp def param format: [name, countFunc, toTextFunc]
orderTempDefs = []
_type = 0

orderTempClearType = _type
ClearTypeDefs = ["Transport Car", "Transport Ship", "Transport APC", "Transport Heli", "Battle Ship", "Light Tank", "Heavy Tank", "Howitzer", "AT APC", "AA Vehicle", "Kamov", "Cobra\Apac\Hind", "Transports", "Tanks", "APCs", "Support APC", "non-AT-Infantry", "AT-Infantry", "All Infantry", "All"]
_param0 = [ "Unit type", "count ClearTypeDefs", "format [""%1"", ClearTypeDefs select _this ]" ]
orderTempDefs set [_type, ["ClearOrder(Type)", [_param0], "OrderTemp ClearType.sqs"] ]
_type = _type + 1

orderTempClearUnit = _type
_param0 = [ "Unit Number ID", "13", "format [""%1"", (_this) ]" ]
orderTempDefs set [_type, ["ClearOrder(Unit)", [_param0], "OrderTemp ClearUnit.sqs"] ]
_type = _type + 1

orderTempRepair = _type
_param0 = [ "Waypoint", "count (wpCO select siPlayer)", "_posRelTown = ((wpCO select siPlayer) select _this) call funcCalcTownDirDistFromPos; format[""co%1 %2"", _this, [_posRelTown, """"] select ((((wpCO select siPlayer) select _this) select 0) == -1)]" ]
_param1 = [ "Response Radius", "20", "format [""%1m"", 100*(_this+1)]" ]
_param2 = [ "Support Radius", "20", "format [""%1m"", 100*(_this+1)]" ]
_param3 = [ "Repair Rate",  "20", "format [""%1%"", 5*_this]" ]
_param4 = [ "Duration", "20", "format [""%1min"", 0.5*(_this+1)]" ]
orderTempDefs set [_type, ["Repair", [_param0, _param1, _param2, _param3, _param4], "OrderTemp Repair.sqs"] ]
_type = _type + 1

orderTempRearm = _type
_param0 = [ "Waypoint", "count (wpCO select siPlayer)", "_posRelTown = ((wpCO select siPlayer) select _this) call funcCalcTownDirDistFromPos; format[""co%1 %2"", _this, [_posRelTown, """"] select ((((wpCO select siPlayer) select _this) select 0) == -1)]" ]
_param1 = [ "Response Radius", "20", "format [""%1m"", 100*(_this+1)]" ]
_param2 = [ "Support Radius", "20", "format [""%1m"", 100*(_this+1)]" ]
_param3 = [ "Sabots", "20", "format [""%1"", _this]" ]
_param4 = [ "Duration", "20", "format [""%1min"", 0.5*(_this+1)]" ]
orderTempDefs set [_type, ["Rearm", [_param0, _param1, _param2, _param3, _param4], "OrderTemp Rearm.sqs"] ]
_type = _type + 1

orderTempReclaim = _type
ReclaimTypeDefs = ["Transport Car", "Transport Ship", "Transport APC", "Transport Heli", "Battle Ship", "Light Tank", "Heavy Tank", "Howitzer", "AT APC", "AA Vehicle", "Kamov", "Cobra\Apac\Hind", "Transports", "Tanks", "APCs", "Support APC"]
ReclaimPrioDefs = ["Driver", "Gunner"]
_param0 = [ "Waypoint", "count (wpCO select siPlayer)", "_posRelTown = ((wpCO select siPlayer) select _this) call funcCalcTownDirDistFromPos; format[""co%1 %2"", _this, [_posRelTown, """"] select ((((wpCO select siPlayer) select _this) select 0) == -1)]" ]
_param1 = [ "Vehicle type", "count ReclaimTypeDefs", "format [""%1"", ReclaimTypeDefs select _this ]" ]
_param2 = [ "Reciaim Radius", "20", "format [""%1m"", 50*(_this+1)]" ]
_param3 = [ "Priority Seat", "count ReclaimPrioDefs", "format [""%1"", ReclaimPrioDefs select _this]" ]
_param4 = [ "Duration", "20", "format [""%1min"", 0.5*(_this+1)]" ]
orderTempDefs set [_type, ["Reclaim", [_param0, _param1, _param2, _param3, _param4], "OrderTemp Reclaim.sqs"] ]
_type = _type + 1

orderTempOccupy = _type
OccupyTypeDefs = ["All Defense", "Mortar", "MG Ground", "MG Tower", "M46", "M46 Art", "Gun Fort"]
_param0 = [ "Waypoint", "count (wpCO select siPlayer)", "_posRelTown = ((wpCO select siPlayer) select _this) call funcCalcTownDirDistFromPos; format[""co%1 %2"", _this, [_posRelTown, """"] select ((((wpCO select siPlayer) select _this) select 0) == -1)]" ]
_param1 = [ "Structure type", "count OccupyTypeDefs", "format [""%1"", OccupyTypeDefs select _this ]" ]
_param2 = [ "Occupy Radius", "20", "format [""%1m"", 50*(_this+1)]" ]
_param3 = [ "Duration", "20", "format [""%1min"", 0.5*(_this+1)]" ]
orderTempDefs set [_type, ["Occupy", [_param0, _param1, _param2, _param3], "OrderTemp Occupy.sqs"] ]
_type = _type + 1

orderTempBoard = _type
BoardTypeDefs = ["Car", "Truck", "Zodiac", "Ship", "APC", "Heli", "Plane"]
_param0 = [ "Waypoint", "count (wpCO select siPlayer)", "_posRelTown = ((wpCO select siPlayer) select _this) call funcCalcTownDirDistFromPos; format[""co%1 %2"", _this, [_posRelTown, """"] select ((((wpCO select siPlayer) select _this) select 0) == -1)]" ]
_param1 = [ "Transport type", "count BoardTypeDefs", "format [""%1"", BoardTypeDefs select _this ]" ]
_param2 = [ "Board Radius", "20", "format [""%1m"", 50*(_this+1)]" ]
_param3 = [ "Duration", "20", "format [""%1min"", 0.5*(_this+1)]" ]
orderTempDefs set [_type, ["Board", [_param0, _param1, _param2, _param3], "OrderTemp Board.sqs"] ]
_type = _type + 1

orderTempLand = _type
LandTypeDefs = ["All Helicopters", "Transport Heli", "Gunship"]
_param0 = [ "Waypoint", "count (wpCO select siPlayer)", "_posRelTown = ((wpCO select siPlayer) select _this) call funcCalcTownDirDistFromPos; format[""co%1 %2"", _this, [_posRelTown, """"] select ((((wpCO select siPlayer) select _this) select 0) == -1)]" ]
_param1 = [ "Helicopter type", "count LandTypeDefs", "format [""%1"", LandTypeDefs select _this ]" ]
_param2 = [ "Land Radius", "20", "format [""%1m"", 200*(_this+1)]" ]
_param3 = [ "Duration", "20", "format [""%1min"", 0.5*(_this+1)]" ]
orderTempDefs set [_type, ["Land Helicopters", [_param0, _param1, _param2, _param3], "OrderTemp Land.sqs"] ]
_type = _type + 1

orderTempSetFlightAltitude = _type
HeightDefs = [3, 5, 10, 20, 30, 40, 50, 100, 150, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1200, 1500]
SetFlightAltitudeTypeDefs = ["Transport Heli", "Original Gunship", "AT Gunship", "All Helicopters", "Planes", "All Aircrafts"]
_param0 = [ "Height", "count HeightDefs", "format [""%1m"", HeightDefs select _this ]" ]
_param1 = [ "Aircraft type", "count SetFlightAltitudeTypeDefs", "format [""%1"", SetFlightAltitudeTypeDefs select _this ]" ]
orderTempDefs set [_type, ["Set Flight Altitude", [_param0, _param1], "OrderTemp SetFlightAltitude.sqs"] ]
_type = _type + 1

orderTempSpoofMissileON = _type
SpoofTypeDefs = ["Transport Heli", "Original Gunship", "AT Gunship", "All Helicopters", "Planes", "All Aircrafts"]
_param0 = [ "Aircraft type", "count SpoofTypeDefs", "format [""%1"", SpoofTypeDefs select _this ]" ]
orderTempDefs set [_type, ["Spoof Missile ON", [_param0], "OrderTemp SpoofMissileON.sqs"] ]
_type = _type + 1

orderTempTransportDuty = _type
TransportDutyTypeDefs = ["Car", "Truck", "Zodiac", "Ship", "APC", "Land", "Transport Heli", "Mi24"]
_param0 = [ "Pickup Pos", "count (wpCO select siPlayer)", "_posRelTown = ((wpCO select siPlayer) select _this) call funcCalcTownDirDistFromPos; format[""co%1 %2"", _this, [_posRelTown, """"] select ((((wpCO select siPlayer) select _this) select 0) == -1)]" ]
_param1 = [ "Eject Pos", "count (wpCO select siPlayer)", "_posRelTown = ((wpCO select siPlayer) select _this) call funcCalcTownDirDistFromPos; format[""co%1 %2"", _this, [_posRelTown, """"] select ((((wpCO select siPlayer) select _this) select 0) == -1)]" ]
_param2 = [ "Eject Distance", "20", "format [""%1m"", 50*(_this+1)]" ]
_param3 = [ "Transport type", "count TransportDutyTypeDefs", "format [""%1"", TransportDutyTypeDefs select _this ]" ]
_param4 = [ "Duration", "20", "format [""%1min"", 3*(_this+1)]" ]
orderTempDefs set [_type, ["Transport Duty", [_param0, _param1, _param2, _param3, _param4], "OrderTemp TransportDuty.sqs"] ]
_type = _type + 1

orderTempMoveType = _type
MoveTypeDefs = ["Transport Car", "Transport Ship", "Transport APC", "Transport Heli", "Battle Ship", "Light Tank", "Heavy Tank", "Howitzer", "AT APC", "AA Vehicle", "Kamov", "Cobra\Apac\Hind", "Transports", "Tanks", "APCs", "Support APC", "non-AT-Infantry", "AT-Infantry", "All Infantry"]
_param0 = [ "Position", "count (wpCO select siPlayer)", "_posRelTown = ((wpCO select siPlayer) select _this) call funcCalcTownDirDistFromPos; format[""co%1 %2"", _this, [_posRelTown, """"] select ((((wpCO select siPlayer) select _this) select 0) == -1)]" ]
_param1 = [ "Unit type", "count MoveTypeDefs", "format [""%1"", MoveTypeDefs select _this ]" ]
_param2 = [ "Guard Radius", "20", "format [""%1m"", 5*_this]" ]
_param3 = [ "Defend Direction", "9", funcDirIndexToText ]
_param4 = [ "Duration", "20", "format [""%1min"", 12*(_this+1)]" ]
orderTempDefs set [_type, ["Move(Type)", [_param0, _param1, _param2, _param3, _param4], "OrderTemp MoveType.sqs"] ]
_type = _type + 1

orderTempMoveUnit = _type
_param0 = [ "Position", "count (wpCO select siPlayer)", "_posRelTown = ((wpCO select siPlayer) select _this) call funcCalcTownDirDistFromPos; format[""co%1 %2"", _this, [_posRelTown, """"] select ((((wpCO select siPlayer) select _this) select 0) == -1)]" ]
_param1 = [ "Unit Number ID", "12", "format [""%1"", (_this+1) ]" ]
_param2 = [ "Guard Radius", "20", "format [""%1m"", 5*_this]" ]
_param3 = [ "Defend Direction", "9", funcDirIndexToText ]
_param4 = [ "Duration", "20", "format [""%1min"", 12*(_this+1)]" ]
orderTempDefs set [_type, ["Move(Unit)", [_param0, _param1, _param2, _param3, _param4], "OrderTemp MoveUnit.sqs"] ]
_type = _type + 1

orderTempHaltType = _type
HaltTypeDefs = ["Transport Car", "Transport Ship", "Transport APC", "Transport Heli", "Battle Ship", "Light Tank", "Heavy Tank", "Howitzer", "AT APC", "AA Vehicle", "Kamov", "Cobra\Apac\Hind", "Transports", "Tanks", "APCs", "Support APC", "non-AT-Infantry", "AT-Infantry", "All Infantry"]
_param0 = [ "Unit type", "count HaltTypeDefs", "format [""%1"", HaltTypeDefs select _this ]" ]
_param1 = [ "Duration", "20", "format [""%1min"", 12*(_this+1)]" ]
orderTempDefs set [_type, ["Halt(Type)", [_param0, _param1], "OrderTemp HaltType.sqs"] ]
_type = _type + 1

orderTempHaltUnit = _type
_param0 = [ "Unit Number ID", "12", "format [""%1"", (_this+1) ]" ]
_param1 = [ "Duration", "20", "format [""%1min"", 12*(_this+1)]" ]
orderTempDefs set [_type, ["Halt(Unit)", [_param0, _param1], "OrderTemp HaltUnit.sqs"] ]
_type = _type + 1

orderTanksEngineOFF = _type
_param0 = [ "Duration", "20", "format [""%1 second"", 6*(_this+1)]" ]
orderTempDefs set [_type, ["Tanks EngineOFF", [_param0], "OrderTemp TanksEngineOFF.sqs"] ]
_type = _type + 1

orderTempDisengageType = _type
DisengageTypeDefs = ["Transport Car", "Transport Ship", "Transport APC", "Transport Heli", "Battle Ship", "Light Tank", "Heavy Tank", "Howitzer", "AT APC", "AA Vehicle", "Kamov", "Cobra\Apac\Hind", "Transports", "Tanks", "APCs", "Support APC", "non-AT-Infantry", "AT-Infantry", "All Infantry"]
_param0 = [ "Unit type", "count DisengageTypeDefs", "format [""%1"", DisengageTypeDefs select _this ]" ]
orderTempDefs set [_type, ["Disengage(Type)", [_param0], "OrderTemp DisengageType.sqs"] ]
_type = _type + 1

orderTempDisengageUnit = _type
_param0 = [ "Unit Number ID", "12", "format [""%1"", (_this+1) ]" ]
orderTempDefs set [_type, ["Disengage(Unit)", [_param0], "OrderTemp DisengageUnit.sqs"] ]
_type = _type + 1

orderTempHoldTown = _type
HoldTownTypeDefs = ["non-AT-Infantry", "AT-Infantry", "Light Tank", "Heavy Tank", "Howitzer", "AT APC", "AA Vehicle", "Kamov", "Cobra\Apac\Hind", "Infantry", "Tanks", "APCs"]
_param0 = [ "Town", "count towns", "(towns select _this) select 1" ]
_param1 = [ "Unit type", "count HoldTownTypeDefs", "format [""%1"", HoldTownTypeDefs select _this ]" ]
_param2 = [ "Defend Distance", "10", "format [""%1m"", 50*(_this+1)]" ]
_param3 = [ "Defend Direction", "9", funcDirIndexToText ]
_param4 = [ "Duration", "20", "format [""%1min"", 12*(_this+1)]" ]
orderTempDefs set [_type, ["HoldTown", [_param0, _param1, _param2, _param3, _param4], "OrderTemp HoldTown.sqs"] ]
_type = _type + 1

orderTempPatrolLine = _type
PatrolLineTypeDefs = ["non-AT-Infantry", "AT-Infantry", "Light Tank", "Heavy Tank", "Howitzer", "AT APC", "AA Vehicle", "Kamov", "Cobra\Apac\Hind", "Infantry", "Tanks", "APCs"]
_param0 = [ "Waypoint", "count (wpCO select siPlayer)", "_posRelTown = ((wpCO select siPlayer) select _this) call funcCalcTownDirDistFromPos; format[""co%1 %2"", _this, [_posRelTown, """"] select ((((wpCO select siPlayer) select _this) select 0) == -1)]" ]
_param1 = [ "Waypoint", "count (wpCO select siPlayer)", "_posRelTown = ((wpCO select siPlayer) select _this) call funcCalcTownDirDistFromPos; format[""co%1 %2"", _this, [_posRelTown, """"] select ((((wpCO select siPlayer) select _this) select 0) == -1)]" ]
_param2 = [ "Unit type", "count PatrolLineTypeDefs", "format [""%1"", PatrolLineTypeDefs select _this ]" ]
_param3 = [ "Duration", "20", "format [""%1min"", 12*(_this+1)]" ]
orderTempDefs set [_type, ["Patrol Line", [_param0, _param1, _param2, _param3], "OrderTemp PatrolLine.sqs"] ]
_type = _type + 1

orderTempMineLine = _type
_param0 = [ "Waypoint", "count (wpCO select siPlayer)", "_posRelTown = ((wpCO select siPlayer) select _this) call funcCalcTownDirDistFromPos; format[""co%1 %2"", _this, [_posRelTown, """"] select ((((wpCO select siPlayer) select _this) select 0) == -1)]" ]
_param1 = [ "Waypoint", "count (wpCO select siPlayer)", "_posRelTown = ((wpCO select siPlayer) select _this) call funcCalcTownDirDistFromPos; format[""co%1 %2"", _this, [_posRelTown, """"] select ((((wpCO select siPlayer) select _this) select 0) == -1)]" ]
_param2 = [ "Duration", "20", "format [""%1min"", 3*(_this+1)]" ]
orderTempDefs set [_type, ["Mine Line", [_param0, _param1, _param2], "OrderTemp MineLine.sqs"] ]
_type = _type + 1

orderTempDisableMines = _type
_param0 = [ "Waypoint", "count (wpCO select siPlayer)", "_posRelTown = ((wpCO select siPlayer) select _this) call funcCalcTownDirDistFromPos; format[""co%1 %2"", _this, [_posRelTown, """"] select ((((wpCO select siPlayer) select _this) select 0) == -1)]" ]
_param1 = [ "Search Radius", "20", "format [""%1m"", 25*_this]" ]
_param2 = [ "Duration", "20", "format [""%1min"", 3*(_this+1)]" ]
orderTempDefs set [_type, ["Disable Mines", [_param0, _param1, _param2], "OrderTemp DisableMines.sqs"] ]
_type = _type + 1




; orderTemp entry format: [orderTempID, orderTempType, [param0, param1, ...]]
orderTempMatrix = [ [], [] ]
_si = si0; _gi = 0; { (orderTempMatrix select _si) set [ _gi, [-1, orderTempClearUnit, [0]] ]; _gi = _gi + 1 } foreach (groupMatrix select _si)
_si = si1; _gi = 0; { (orderTempMatrix select _si) set [ _gi, [-1, orderTempClearUnit, [0]] ]; _gi = _gi + 1 } foreach (groupMatrix select _si)


; WAYPOINTS
countWPPlayer = 10
countWPCO = 20
wpCO = [[],[]]
_i = 0; while "_i < countWPCO" do { (wpCO select si0) set [_i, [-1,-1]]; _i = _i + 1 } 
_i = 0; while "_i < countWPCO" do { (wpCO select si1) set [_i, [-1,-1]]; _i = _i + 1 }

; { _index = 0; while "_index < countWaypoints" do { (waypoint select _x) set [_index, []];  _index = _index + 1 } } foreach [si0, si1]

; vehicleAttached format: [ [tug, [vehicleCenter, vehicleRight, vehicleLeft]], ...]
tsTug = 0
tsTugged = 1
tsCenter = 0
tsRight = 1
tsLeft = 2
vehicleAttached = []
ttHeli = 0
ttBoat = 1
ttTruck = 2
ttAPC = 3
; vehicleTuggedServer is used to check vehicles' position and fix the attach/detach position bug
vehicleTuggedServer = []; vehicleTugServer = []


; MESSAGE HANDLERS (SERVER AND CLIENTS)
[] exec "Common\MsgScore.sqs"
[] exec "Common\MsgAIGroupOrder0.sqs"
[] exec "Common\MsgAIGroupOrder1.sqs"
[] exec "Common\MsgAIGroupOrder2.sqs"
[] exec "Common\MsgAIGroupOrder3.sqs"
[] exec "Common\MsgAIGroupOrder4.sqs"
[] exec "Common\MsgAIGroupSetting0.sqs"
[] exec "Common\MsgAIGroupSetting1.sqs"
[] exec "Common\MsgAIGroupSetting2.sqs"
[] exec "Common\MsgAIGroupSetting3.sqs"
[] exec "Common\MsgAIGroupSetting4.sqs"
[] exec "Common\MsgSetWPCO.sqs"
[] exec "Common\MsgVehicleAttached.sqs"
[] exec "Common\MsgDetachVehicle.sqs"
[] exec "Common\MsgVehicleDetached.sqs"
[] exec "Common\MsgLock.sqs"
[] exec "Common\MsgUnlock.sqs"
[] exec "Common\MsgVehicleMagsRemove.sqs"
[] exec "Common\MsgVehicleMagsAdd.sqs"
[] exec "Common\MsgEjectUnit.sqs"
[] exec "Common\MsgFuelVehicle.sqs"
[] exec "Common\MsgTransportTurnOn.sqs"
[] exec "Common\MsgTransportTurnOff.sqs"
[] exec "Common\MsgUnitBuilt_0.sqs"
[] exec "Common\MsgUnitBuilt_1.sqs"
[] exec "Common\MsgUnitBuilt_2.sqs"
[] exec "Common\MsgUnitBuilt_3.sqs"
[] exec "Common\MsgUnitBuilt_4.sqs"
[] exec "Common\MsgObjectRepaired.sqs"
;[] exec "Common\MsgScudOperation.sqs"
[] exec "Common\MsgStructMatrixRemove.sqs"

? !isNull player : [] exec "Common\MsgEffectKilledTank.sqs"; [] exec "Common\MsgEffectKilledAircraft.sqs"; [] exec "Common\MsgEffectKilledBoat.sqs";
? !isNull player : [] exec "Common\MsgPlaneAfterBurnerON.sqs"; [] exec "Common\MsgPlaneAfterBurnerOFF.sqs";
[] exec "Common\MsgNuclearMissileExploded.sqs"
[] exec "Common\MsgAITemporaryOrder.sqs"


; SORT TOWNS
_c = count towns
_i = 0
#SortTownsNextI
  _j = _i + 1
  #SortTownsNextJ
		_townI = towns select _i;
		_townJ = towns select _j;
		? ((getPos (_townI select tdFlag)) select 1) > ((getPos (_townJ select tdFlag)) select 1) : goto "SortTownsSkip"
		towns set [_i, _townJ];
		towns set [_j, _townI];
    #SortTownsSkip
    _j = _j + 1
    ? _j < _c : goto "SortTownsNextJ"

  _i = _i + 1
  ? _i < (_c - 1) : goto "SortTownsNextI"

; calc map center by using town positions
_posX = 0
_posY = 0
{ _posX = _posX + ((getPos (_x select tdFlag)) select 0); _posY = _posY + ((getPos (_x select tdFlag)) select 1) } foreach towns
posCenter = [_posX/_c, _posY/_c]






townGroups = [ [], [] ]
; workerGroups = [ [], [] ]
workerGroups = [ [groupWorker00, groupWorker01, groupWorker02], [groupWorker10, groupWorker11, groupWorker12] ]
timeReinforceTown = 3*60

? (local LocalServerObject): [_bool_Infantry_Mode, _bool_NeutralTown_Mode, _bool_SEMod_Mode] exec "Server\InitServer.sqs"
? !(local LocalServerObject): [] exec "Player\InitClient.sqs"

;player globalchat "init.sqs Exit"
